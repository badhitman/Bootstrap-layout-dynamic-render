@*MIT License (https://github.com/badhitman)*@
@using BootstrapAspDynamicRender.service
@using BootstrapAspDynamicRender.components
@using BootstrapAspDynamicRender.models
@model absNav
@if (!string.IsNullOrEmpty(Model.Before_coment_block))
{
    await Component.InvokeAsync(typeof(hrComment).Name, new { MessageComment = Model.Before_coment_block });
}
@{

    //string ViewComponentName = Model.NavWrapperType == BootstrapAspDynamicRender.models.bmNavWrappersEnum.ul ? typeof(NavWrapUL).Name : typeof(NavWrapNAV).Name;
    string ViewComponentName;
    if (Model.NavWrapperType == bmNavWrappersEnum.ul)
    {
        ViewComponentName = typeof(brNavWrapUL).Name;
    }
    else
    {
        ViewComponentName = typeof(brNavWrapNAV).Name;
        if (Model.IsTabsStyle)
        {
            Model.ChildsAddCSS("nav-item");
        }
    }
}
@await Component.InvokeAsync(ViewComponentName, new { SetObjectManager = Model })
@if (Model is bsNavJavaScriptBehavior)
{
    bsNavJavaScriptBehavior NavJavaScriptBehavior = Model as bsNavJavaScriptBehavior;
    string id_active_nav = "";
    foreach (bsNavItem navItem in NavJavaScriptBehavior.GetChilds())
    {
        if (navItem.IsActive)
        {
            id_active_nav = navItem.Href.Substring(1);
            break;
        }
    }

    string fade_style = NavJavaScriptBehavior.IsFadeStyle ? " fade" : string.Empty;
    @:<div class="tab-content" id="@(Model.ID)Content">
        //string set_first_tab_as_active = " show active";
        foreach (KeyValuePair<string, string> kvp in NavJavaScriptBehavior.CacheContents)
        {
            <div class="tab-pane @fade_style@(id_active_nav.ToLower()==kvp.Key.ToLower()?" show active":"")" id="@kvp.Key" role="tabpanel" aria-labelledby="@kvp.Key-tab">@kvp.Value</div>
        }
    @:</div>
}
@if (!string.IsNullOrEmpty(Model.After_coment_block))
{
    await Component.InvokeAsync(typeof(hrComment).Name, new { MessageComment = Model.After_coment_block });
}